name: Auto Code Inspect for Pull Request


on:
  pull_request:
    types: [opened, reopened, synchronize]


jobs:
  build:
    runs-on: ubuntu-22.04

    permissions:
      contents: read

    steps:
      - name: Clear labels
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --remove-label 'auto_ci/succeeded'
          gh pr edit ${{ github.event.pull_request.number }} --remove-label 'auto_ci/failed'
          gh pr edit ${{ github.event.pull_request.number }} --remove-label 'auto_ci/checking'


      - name: Check for labelled 'ci/skip'
        if: contains(github.event.pull_request.labels.*.name, 'ci/skip')
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label 'auto_ci/skipped'
          exit 0


      - name: Add label 'auto_ci/checking'
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label 'auto_ci/checking'
      

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle


      # Github CodeQL Scanner
      - name: Initialize CodeQL
        id: codeql-init
        uses: github/codeql-action/init@v3
        continue-on-error: true
        with:
          languages: ${{ matrix.language }}

      - name: Run CodeQL AutoBuild
        id: codeql-autobuild
        uses: github/codeql-action/autobuild@v3
        continue-on-error: true
        if: ${{ steps.codeql-init.outcome == 'success' }}

      - name: Perform CodeQL Analysis
        id: codeql-analyze
        uses: github/codeql-action/analyze@v3
        continue-on-error: true
        if: ${{ steps.codeql-init.outcome == 'success' && steps.codeql-autobuild.outcome == 'success' }}


      # Jetbrains Qodana Scanner
      - name: 'Qodana Scan'
        id: qodana-action
        uses: JetBrains/qodana-action@v2024
        continue-on-error: true
        if: ${{ steps.codeql-init.outcome == 'success' && steps.codeql-autobuild.outcome == 'success' && steps.codeql-analyze.outcome == 'success' }}
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}


      - name: Remove label 'auto_ci/checking'
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --remove-label 'auto_ci/checking'


      - name: Add status label
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label ${{
            (steps.codeql-init.outcome == 'success' && steps.codeql-autobuild.outcome == 'success' && steps.codeql-analyze.outcome == 'success' && steps.qodana-action.outcome == 'success')
              && 'auto_ci/succeeded'
              || 'auto_ci/failed'
          }}
